$input-padding: 5px 15px 8px;

.simple-contact {
  background-color: #efefef;
  margin-bottom: 1em;
  padding: 1em;
  @include clearfix();
  .group-half, .group-full {
    padding-bottom:1em;
    input {
      width:100%;
    }
  }
  .group-half {
    @extend %col-50;
  }
  .group-full {
    @extend %col-100;
  }
}


.btn, button, input[type='submit'] {
  @include border-radius(5px);
  background-color: $brand-primary;
  background-image: none;
  border: 1px solid transparent;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-weight: normal;
  line-height: 1.35;
  margin-bottom: 0; // For input.btn
  padding: $input-padding;
  text-align: center;
  text-decoration: none;
  touch-action: manipulation;
  vertical-align: middle;
  white-space: nowrap;
  &:hover {
    background-color: saturate($brand-primary,10%);
    color:#fff;
    text-decoration: none;
  }
  &:active,
  &.active {
    outline: 0;
    background-image: none;
  }
  &.btn-lg {
    font-size: 1.25em;
  }
  &.btn-sm {
    font-size: .75em;
  }
  &.btn-subtle {
    background-color: $gray-light;
  }
}
.sneaky { display: none; }



// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  @include box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}

// Set the height of file controls to match text inputs
input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  @include tab-focus;
}

select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
  display: block;
  height: $font-size-base + 20px; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $input-padding;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
  background-color: #fff;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  outline: none;
  border: 1px solid $gray;
  @include border-radius(5px);

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $gray-lighter;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  // [converter] extracted textarea& to textarea.form-control
}
